1) animar mapa segindo exemplo do stor

2) Simular o contagio
1º tentativa de contágio
Criação de um array
	virusState em que cada taxi é 1 se infetado, 0 se não
	contagioState em que cada taxi é nº que infetou - 1
	depois correr o algorimo
	'''
	def contagio(i):
    for t in range(0,1659):
        x,y = offsets[i][t]
        #t not in infected
        if(x != -120000.0 and y != -310000.0 and t not in infetados):
            infBool = False
            for inf in infetados:
                if(infBool):
                    #testar se isto só afeta o loop dos infetados
                    break
                xi,yi = offsets[i][inf]
                #calcular distancia
                dist = math.hypot(x - xi, y - yi)
                if(dist <= 10):
                    if(random.randint(1,10) == 1):
                        #foi infectado
                        infetados.append(t)
                        virusState[t] = 1
                        contigioState[inf] += 1
                        infBool = True
    return
	'''
	a execução é interrompida quando os contágio são maiores que 150
	(consome demasiada ram dunno)

2º tentativa
simular o contágio antes de fazer a animação
(demorou cerca de 7-8 minutos a fazer o contágio, com 10 iniciais)

3º tentativa
gerar csv(já com os 2 iniciais ~3.5m ) com os valores de contágio para não ser necessário estar sempre a gerar o contágio
//consome demasiada ram ... {
    sempre a crashar pc
}

4º tentativa
ler ficheiros csv com pandas {
    para ler o offsets não conpensava porque tinhamos que ler linha a linha de qualquer maneira para mudar o 0,0 para fora do mapa
}
demorou ~1 minuto

2.1) escolher os taxis iniciais
-- como disse inicialmente estavamos a usar o contágio com 10 taxis completamente aleatórios
agora temos de escolher 2 taxis aleatoríos, um no porto e um em lisboa, escolhendo entre os 10 primeiros a aparecer nos dois conselhos
--- Criação  do script first_cases.py
--- alteração do script de geração para usar os dois casos

3) Desenhar graf da evo 
Fiz uma animação para ir mundando os dados e axes do graf de acordo com o tempo e nº de infetados
Para organizar melhor os diferentes plos usamos o gridspec do matplotlib


4)Feature1(BRUNO -- (DOING))
---desenhar o mapa dos trajetos dos infetados
---tentar fazer uma representação 3d


5)Feature2(Carvalho -- TODO)

6) Extras (todo)
--tentar guardar os arrays de cor antes da execução a ver se poupa recursos(done o problema não era o programa a crashar mas sim o tempo que estava mal calculado -- voltar a fazer caso acha problemas de performance)

--Guardar animação(mp4 ou gif)
--criar script com opções{
    -especificar user da bd
    -gerar novos offsets
    -guardar animação em vez de mostrar

}